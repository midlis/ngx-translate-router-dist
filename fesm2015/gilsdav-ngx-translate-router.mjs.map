{"version":3,"file":"gilsdav-ngx-translate-router.mjs","sources":["../../../projects/ngx-translate-router/src/lib/localize-router.config.ts","../../../projects/ngx-translate-router/src/lib/localize-router.parser.ts","../../../projects/ngx-translate-router/src/lib/util.ts","../../../projects/ngx-translate-router/src/lib/localize-router.service.ts","../../../projects/ngx-translate-router/src/lib/localize-router.pipe.ts","../../../projects/ngx-translate-router/src/lib/gilsdav-reuse-strategy.ts","../../../projects/ngx-translate-router/src/lib/localized-router.ts","../../../projects/ngx-translate-router/src/lib/localize-router.module.ts","../../../projects/ngx-translate-router/src/lib/localize-router-config-loader.ts","../../../projects/ngx-translate-router/src/public_api.ts","../../../projects/ngx-translate-router/src/gilsdav-ngx-translate-router.ts"],"sourcesContent":["import { Inject, InjectionToken, Provider, Injectable, Optional } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { LocalizeRouterModule } from './localize-router.module';\n\n/**\n * Guard to make sure we have single initialization of forRoot\n */\nexport const LOCALIZE_ROUTER_FORROOT_GUARD = new InjectionToken<LocalizeRouterModule>('LOCALIZE_ROUTER_FORROOT_GUARD');\n\n/**\n * Static provider for keeping track of routes\n */\nexport const RAW_ROUTES: InjectionToken<Routes[]> = new InjectionToken<Routes[]>('RAW_ROUTES');\n\n/**\n * Type for Caching of default language\n */\n// export type CacheMechanism = 'LocalStorage' | 'Cookie';\n\n/**\n * Namespace for fail proof access of CacheMechanism\n */\nexport enum CacheMechanism {\n  LocalStorage = 'LocalStorage',\n  SessionStorage = 'SessionStorage',\n  Cookie = 'Cookie'\n}\n\n/**\n * Boolean to indicate whether to use cached language value\n */\nexport const USE_CACHED_LANG = new InjectionToken<boolean>('USE_CACHED_LANG');\n/**\n * Cache mechanism type\n */\nexport const CACHE_MECHANISM = new InjectionToken<CacheMechanism>('CACHE_MECHANISM');\n/**\n * Cache name\n */\nexport const CACHE_NAME = new InjectionToken<string>('CACHE_NAME');\n/**\n * Cookie cache format\n */\nexport const COOKIE_FORMAT = new InjectionToken<boolean>('COOKIE_FORMAT');\n/**\n * Cookie cache format\n */\nexport const INITIAL_NAVIGATION = new InjectionToken<boolean>('INITIAL_NAVIGATION');\n\n/**\n * Type for default language function\n * Used to override basic behaviour\n */\nexport type DefaultLanguageFunction = (languages: string[], cachedLang?: string, browserLang?: string) => string;\n\n/**\n * Function for calculating default language\n */\nexport const DEFAULT_LANG_FUNCTION = new InjectionToken<DefaultLanguageFunction>('DEFAULT_LANG_FUNCTION');\n\n/**\n * Boolean to indicate whether prefix should be set for single language scenarios\n */\nexport const ALWAYS_SET_PREFIX = new InjectionToken<boolean>('ALWAYS_SET_PREFIX');\n\n/**\n * Config interface for LocalizeRouter\n */\nexport interface LocalizeRouterConfig {\n  parser?: Provider;\n  useCachedLang?: boolean;\n  cacheMechanism?: CacheMechanism;\n  cacheName?: string;\n  defaultLangFunction?: DefaultLanguageFunction;\n  alwaysSetPrefix?: boolean;\n  cookieFormat?: string;\n  initialNavigation?: boolean;\n}\n\nconst LOCALIZE_CACHE_NAME = 'LOCALIZE_DEFAULT_LANGUAGE';\nconst DEFAULT_COOKIE_FORMAT = '{{value}};{{expires}}';\nconst DEFAULT_INITIAL_NAVIGATION = false;\n\n@Injectable()\nexport class LocalizeRouterSettings implements LocalizeRouterConfig {\n\n  public cacheMechanism: CacheMechanism;\n  public defaultLangFunction: DefaultLanguageFunction;\n\n  /**\n   * Settings for localize router\n   */\n  constructor(\n    @Inject(USE_CACHED_LANG) public useCachedLang: boolean = true,\n    @Inject(ALWAYS_SET_PREFIX) public alwaysSetPrefix: boolean = true,\n    @Inject(CACHE_MECHANISM) cacheMechanism = CacheMechanism.LocalStorage,\n    @Inject(CACHE_NAME) public cacheName: string = LOCALIZE_CACHE_NAME,\n    @Inject(DEFAULT_LANG_FUNCTION) defaultLangFunction = void 0,\n    @Inject(COOKIE_FORMAT) public cookieFormat: string = DEFAULT_COOKIE_FORMAT,\n    @Inject(INITIAL_NAVIGATION) public initialNavigation: boolean = DEFAULT_INITIAL_NAVIGATION,\n  ) {\n    this.cacheMechanism = cacheMechanism;\n    this.defaultLangFunction = defaultLangFunction;\n  }\n\n}\n","import { Routes, Route, NavigationExtras, Params } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { firstValueFrom, Observable, Observer } from 'rxjs';\nimport { Location } from '@angular/common';\nimport { CacheMechanism, LocalizeRouterSettings } from './localize-router.config';\nimport { Inject, Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\n\nconst COOKIE_EXPIRY = 30; // 1 month\n\n/**\n * Abstract class for parsing localization\n */\n@Injectable()\nexport abstract class LocalizeParser {\n  locales: Array<string>;\n  currentLang: string;\n  routes: Routes;\n  defaultLang: string;\n\n  protected prefix: string;\n  protected escapePrefix: string;\n\n  private _translationObject: any;\n  private _wildcardRoute: Route;\n  private _languageRoute: Route;\n\n  /**\n   * Loader constructor\n   */\n  constructor(@Inject(TranslateService) private translate: TranslateService,\n    @Inject(Location) private location: Location,\n    @Inject(LocalizeRouterSettings) private settings: LocalizeRouterSettings) {\n  }\n\n  /**\n   * Load routes and fetch necessary data\n   */\n  abstract load(routes: Routes): Promise<any>;\n\n  /**\n * Prepare routes to be fully usable by ngx-translate-router\n * @param routes\n */\n  /* private initRoutes(routes: Routes, prefix = '') {\n    routes.forEach(route => {\n      if (route.path !== '**') {\n        const routeData: any = route.data = route.data || {};\n        routeData.localizeRouter = {};\n        routeData.localizeRouter.fullPath = `${prefix}/${route.path}`;\n        if (route.children && route.children.length > 0) {\n          this.initRoutes(route.children, routeData.localizeRouter.fullPath);\n        }\n      }\n    });\n  } */\n\n\n  /**\n   * Initialize language and routes\n   */\n  protected init(routes: Routes): Promise<any> {\n    let selectedLanguage: string;\n\n    // this.initRoutes(routes);\n    this.routes = routes;\n\n    if (!this.locales || !this.locales.length) {\n      return Promise.resolve();\n    }\n    /** detect current language */\n    const locationLang = this.getLocationLang();\n    const browserLang = this._getBrowserLang();\n\n    if (this.settings.defaultLangFunction) {\n      this.defaultLang = this.settings.defaultLangFunction(this.locales, this._cachedLang, browserLang);\n    } else {\n      this.defaultLang = this._cachedLang || browserLang || this.locales[0];\n    }\n    selectedLanguage = locationLang || this.defaultLang;\n    this.translate.setDefaultLang(this.defaultLang);\n\n    let children: Routes = [];\n    /** if set prefix is enforced */\n    if (this.settings.alwaysSetPrefix) {\n      const baseRoute: Route = { path: '', redirectTo: this.defaultLang, pathMatch: 'full' };\n\n      /** extract potential wildcard route */\n      const wildcardIndex = routes.findIndex((route: Route) => route.path === '**');\n      if (wildcardIndex !== -1) {\n        this._wildcardRoute = routes.splice(wildcardIndex, 1)[0];\n      }\n      children = this.routes.splice(0, this.routes.length, baseRoute);\n    } else {\n      children = [...this.routes]; // shallow copy of routes\n    }\n\n    /** exclude certain routes */\n    for (let i = children.length - 1; i >= 0; i--) {\n      if (children[i].data && children[i].data['skipRouteLocalization']) {\n        if (this.settings.alwaysSetPrefix) {\n          // add directly to routes\n          this.routes.push(children[i]);\n        }\n        // remove from routes to translate only if doesn't have to translate `redirectTo` property\n        if (children[i].redirectTo === undefined || !(children[i].data['skipRouteLocalization']['localizeRedirectTo'])) {\n          children.splice(i, 1);\n        }\n      }\n    }\n\n    /** append children routes */\n    if (children && children.length) {\n      if (this.locales.length > 1 || this.settings.alwaysSetPrefix) {\n        this._languageRoute = { children: children };\n        this.routes.unshift(this._languageRoute);\n      }\n    }\n\n    /** ...and potential wildcard route */\n    if (this._wildcardRoute && this.settings.alwaysSetPrefix) {\n      this.routes.push(this._wildcardRoute);\n    }\n\n    /** translate routes */\n    return firstValueFrom(\n      this.translateRoutes(selectedLanguage)\n    );\n  }\n\n  initChildRoutes(routes: Routes) {\n    this._translateRouteTree(routes);\n    return routes;\n  }\n\n  /**\n   * Translate routes to selected language\n   */\n  translateRoutes(language: string): Observable<any> {\n    return new Observable<any>((observer: Observer<any>) => {\n      this._cachedLang = language;\n      if (this._languageRoute) {\n        this._languageRoute.path = language;\n      }\n\n      this.translate.use(language).subscribe((translations: any) => {\n        this._translationObject = translations;\n        this.currentLang = language;\n\n        if (this._languageRoute) {\n          if (this._languageRoute) {\n            this._translateRouteTree(this._languageRoute.children);\n          }\n          // if there is wildcard route\n          if (this._wildcardRoute && this._wildcardRoute.redirectTo) {\n            this._translateProperty(this._wildcardRoute, 'redirectTo', true);\n          }\n        } else {\n          this._translateRouteTree(this.routes);\n        }\n\n        observer.next(void 0);\n        observer.complete();\n      });\n    });\n  }\n\n  /**\n   * Translate the route node and recursively call for all it's children\n   */\n  private _translateRouteTree(routes: Routes): void {\n    routes.forEach((route: Route) => {\n      const skipRouteLocalization = (route.data && route.data['skipRouteLocalization']);\n      const localizeRedirection = !skipRouteLocalization || skipRouteLocalization['localizeRedirectTo'];\n\n      if (route.redirectTo && localizeRedirection) {\n        this._translateProperty(route, 'redirectTo', !route.redirectTo.indexOf('/'));\n      }\n\n      if (skipRouteLocalization) {\n        return;\n      }\n\n      if (route.path !== null && route.path !== undefined/* && route.path !== '**'*/) {\n        this._translateProperty(route, 'path');\n      }\n      if (route.children) {\n        this._translateRouteTree(route.children);\n      }\n      if (route.loadChildren && (<any>route)._loadedRoutes?.length) {\n        this._translateRouteTree((<any>route)._loadedRoutes);\n      }\n    });\n  }\n\n  /**\n   * Translate property\n   * If first time translation then add original to route data object\n   */\n  private _translateProperty(route: Route, property: string, prefixLang?: boolean): void {\n    // set property to data if not there yet\n    const routeData: any = route.data = route.data || {};\n    if (!routeData.localizeRouter) {\n      routeData.localizeRouter = {};\n    }\n    if (!routeData.localizeRouter[property]) {\n      routeData.localizeRouter = {...routeData.localizeRouter, [property]: route[property] };\n    }\n\n    const result = this.translateRoute(routeData.localizeRouter[property]);\n    (<any>route)[property] = prefixLang ? this.addPrefixToUrl(result) : result;\n  }\n\n  get urlPrefix() {\n    if (this.settings.alwaysSetPrefix || this.currentLang !== this.defaultLang) {\n      return this.currentLang ? this.currentLang : this.defaultLang;\n    } else {\n      return '';\n    }\n  }\n\n  /**\n   * Add current lang as prefix to given url.\n   */\n  addPrefixToUrl(url: string): string {\n    const plitedUrl = url.split('?');\n    plitedUrl[0] = plitedUrl[0].replace(/\\/$/, '');\n    return `/${this.urlPrefix}${plitedUrl.join('?')}`;\n  }\n\n  /**\n   * Translate route and return observable\n   */\n  translateRoute(path: string): string {\n    const queryParts = path.split('?');\n    if (queryParts.length > 2) {\n      throw Error('There should be only one query parameter block in the URL');\n    }\n    const pathSegments = queryParts[0].split('/');\n\n    /** collect observables  */\n    return pathSegments\n      .map((part: string) => part.length ? this.translateText(part) : part)\n      .join('/') +\n      (queryParts.length > 1 ? `?${queryParts[1]}` : '');\n  }\n\n  /**\n   * Get language from url\n   */\n  getLocationLang(url?: string): string {\n    const queryParamSplit = (url || this.location.path()).split(/[\\?;]/);\n    let pathSlices: string[] = [];\n    if (queryParamSplit.length > 0) {\n      pathSlices = queryParamSplit[0].split('/');\n    }\n    if (pathSlices.length > 1 && this.locales.indexOf(pathSlices[1]) !== -1) {\n      return pathSlices[1];\n    }\n    if (pathSlices.length && this.locales.indexOf(pathSlices[0]) !== -1) {\n      return pathSlices[0];\n    }\n    return null;\n  }\n\n  /**\n   * Get user's language set in the browser\n   */\n  private _getBrowserLang(): string {\n    return this._returnIfInLocales(this.translate.getBrowserLang());\n  }\n\n  /**\n   * Get language from local storage or cookie\n   */\n  private get _cachedLang(): string {\n    if (!this.settings.useCachedLang) {\n      return;\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.LocalStorage) {\n      return this._cacheWithLocalStorage();\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.SessionStorage) {\n      return this._cacheWithSessionStorage();\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.Cookie) {\n      return this._cacheWithCookies();\n    }\n  }\n\n  /**\n   * Save language to local storage or cookie\n   */\n  private set _cachedLang(value: string) {\n    if (!this.settings.useCachedLang) {\n      return;\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.LocalStorage) {\n      this._cacheWithLocalStorage(value);\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.SessionStorage) {\n      this._cacheWithSessionStorage(value);\n    }\n    if (this.settings.cacheMechanism === CacheMechanism.Cookie) {\n      this._cacheWithCookies(value);\n    }\n  }\n\n  /**\n   * Cache value to local storage\n   */\n  private _cacheWithLocalStorage(value?: string): string {\n    try {\n      if (typeof window === 'undefined' || typeof window.localStorage === 'undefined') {\n        return;\n      }\n      if (value) {\n        window.localStorage.setItem(this.settings.cacheName, value);\n        return;\n      }\n      return this._returnIfInLocales(window.localStorage.getItem(this.settings.cacheName));\n    } catch (e) {\n      // weird Safari issue in private mode, where LocalStorage is defined but throws error on access\n      return;\n    }\n  }\n\n  /**\n   * Cache value to session storage\n   */\n  private _cacheWithSessionStorage(value?: string): string {\n    try {\n      if (typeof window === 'undefined' || typeof window.sessionStorage === 'undefined') {\n        return;\n      }\n      if (value) {\n        window.sessionStorage.setItem(this.settings.cacheName, value);\n        return;\n      }\n      return this._returnIfInLocales(window.sessionStorage.getItem(this.settings.cacheName));\n    } catch (e) {\n      return;\n    }\n  }\n\n  /**\n   * Cache value via cookies\n   */\n  private _cacheWithCookies(value?: string): string {\n    try {\n      if (  typeof document === 'undefined' || typeof document.cookie === 'undefined') {\n        return;\n      }\n      const name = encodeURIComponent(this.settings.cacheName);\n      if (value) {\n        let cookieTemplate = `${this.settings.cookieFormat}`;\n        cookieTemplate = cookieTemplate\n          .replace('{{value}}', `${name}=${encodeURIComponent(value)}`)\n          .replace(/{{expires:?(\\d+)?}}/g, (fullMatch, groupMatch) => {\n              const days = groupMatch === undefined ? COOKIE_EXPIRY : parseInt(groupMatch, 10);\n              const date: Date = new Date();\n              date.setTime(date.getTime() + days * 86400000);\n              return `expires=${date.toUTCString()}`;\n          });\n\n        document.cookie = cookieTemplate;\n        return;\n      }\n      const regexp = new RegExp('(?:^' + name + '|;\\\\s*' + name + ')=(.*?)(?:;|$)', 'g');\n      const result = regexp.exec(document.cookie);\n      return decodeURIComponent(result[1]);\n    } catch (e) {\n      return; // should not happen but better safe than sorry (can happen by using domino)\n    }\n  }\n\n  /**\n   * Check if value exists in locales list\n   */\n  private _returnIfInLocales(value: string): string {\n    if (value && this.locales.indexOf(value) !== -1) {\n      return value;\n    }\n    return null;\n  }\n\n  /**\n   * Get translated value\n   */\n  private translateText(key: string): string {\n    if (this.escapePrefix && key.startsWith(this.escapePrefix)) {\n      return key.replace(this.escapePrefix, '');\n    } else {\n      if (!this._translationObject) {\n        return key;\n      }\n      const fullKey = this.prefix + key;\n      const res = this.translate.getParsedResult(this._translationObject, fullKey);\n      return res !== fullKey ? res : key;\n    }\n  }\n\n  /**\n   * Strategy to choose between new or old queryParams\n   * @param newExtras extras that containes new QueryParams\n   * @param currentQueryParams current query params\n   */\n  public chooseQueryParams(newExtras: NavigationExtras, currentQueryParams: Params) {\n    let queryParamsObj: Params;\n    if (newExtras && newExtras.queryParams) {\n      queryParamsObj = newExtras.queryParams;\n    } else if (currentQueryParams) {\n      queryParamsObj = currentQueryParams;\n    }\n    return queryParamsObj;\n  }\n\n  /**\n   * Format query params from object to string.\n   * Exemple of result: `param=value&param2=value2`\n   * @param params query params object\n   */\n  public formatQueryParams(params: Params): string {\n    return new HttpParams({ fromObject: params }).toString();\n  }\n\n  /**\n   * Get translation key prefix from config\n   */\n  public getPrefix(): string {\n    return this.prefix;\n  }\n\n  /**\n   * Get escape translation prefix from config\n   */\n  public getEscapePrefix(): string {\n    return this.escapePrefix;\n  }\n}\n\n/**\n * Manually set configuration\n */\nexport class ManualParserLoader extends LocalizeParser {\n\n  /**\n   * CTOR\n   */\n  constructor(translate: TranslateService, location: Location, settings: LocalizeRouterSettings,\n    locales: string[] = ['en'], prefix: string = 'ROUTES.', escapePrefix: string = '') {\n    super(translate, location, settings);\n    this.locales = locales;\n    this.prefix = prefix || '';\n    this.escapePrefix = escapePrefix || '';\n  }\n\n  /**\n   * Initialize or append routes\n   */\n  load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      this.init(routes).then(resolve);\n    });\n  }\n}\n\n@Injectable()\nexport class DummyLocalizeParser extends LocalizeParser {\n  load(routes: Routes): Promise<any> {\n    return new Promise((resolve: any) => {\n      this.init(routes).then(resolve);\n    });\n  }\n}\n","/**\n * Compare if two objects are same\n */\nexport function equals(o1: any, o2: any): boolean {\n  if (o1 === o2) {\n    return true;\n  }\n  if (o1 === null || o2 === null) {\n    return false;\n  }\n  if (o1 !== o1 && o2 !== o2) {\n    return true; // NaN === NaN\n  }\n  const t1 = typeof o1,\n    t2 = typeof o2;\n  let length: number,\n    key: any,\n    keySet: any;\n\n  if (t1 === t2 && t1 === 'object') {\n    if (Array.isArray(o1)) {\n      if (!Array.isArray(o2)) {\n        return false;\n      }\n      if ((length = o1.length) === o2.length) {\n        for (key = 0; key < length; key++) {\n          if (!equals(o1[key], o2[key])) {\n            return false;\n          }\n        }\n        return true;\n      }\n    } else {\n      if (Array.isArray(o2)) {\n        return false;\n      }\n      keySet = Object.create(null);\n      for (key in o1) {\n        if (o1.hasOwnProperty(key)) {\n          if (!equals(o1[key], o2[key])) {\n            return false;\n          }\n          keySet[key] = true;\n        }\n      }\n      for (key in o2) {\n        if (o2.hasOwnProperty(key)) {\n          if (!(key in keySet) && typeof o2[key] !== 'undefined') {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Deep copy of object and array\n */\nexport function deepCopy<t>(object: t): t {\n  const output = Array.isArray(object) ? [] : {};\n  for (const data in object) {\n    if (data) {\n      const value = object[data];\n      output[data as string] = (typeof value === 'object') ? deepCopy(value) : value;\n    }\n  }\n  return output as t;\n}\n\nexport function flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T|T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n","import { Inject, Injectable } from '@angular/core';\n// import { Location } from '@angular/common';\nimport {\n  Router, NavigationStart, ActivatedRouteSnapshot, NavigationExtras, ActivatedRoute,\n  Event, NavigationCancel, Routes\n} from '@angular/router';\nimport { Subject, Observable, ReplaySubject } from 'rxjs';\nimport { filter, pairwise } from 'rxjs/operators';\n\nimport { LocalizeParser } from './localize-router.parser';\nimport { LocalizeRouterSettings } from './localize-router.config';\nimport { LocalizedMatcherUrlSegment } from './localized-matcher-url-segment';\nimport { deepCopy } from './util';\n\n/**\n * Localization service\n * modifyRoutes\n */\n@Injectable()\nexport class LocalizeRouterService {\n  routerEvents: Subject<string>;\n  hooks: {\n    /** @internal */\n    _initializedSubject: ReplaySubject<boolean>;\n    initialized: Observable<boolean>;\n  };\n\n\n  private latestUrl: string;\n  private lastExtras?: NavigationExtras;\n\n  /**\n   * CTOR\n   */\n  constructor(\n      @Inject(LocalizeParser) public parser: LocalizeParser,\n      @Inject(LocalizeRouterSettings) public settings: LocalizeRouterSettings,\n      @Inject(Router) private router: Router,\n      @Inject(ActivatedRoute) private route: ActivatedRoute/*,\n      @Inject(Location) private location: Location*/\n    ) {\n      this.routerEvents = new Subject<string>();\n      const initializedSubject = new ReplaySubject<boolean>(1);\n      this.hooks = {\n        _initializedSubject: initializedSubject,\n        initialized: initializedSubject.asObservable()\n      };\n  }\n\n  /**\n   * Start up the service\n   */\n  init(): void {\n    this.applyConfigToRouter(this.parser.routes);\n    // subscribe to router events\n    this.router.events\n      .pipe(\n        filter(event => event instanceof NavigationStart),\n        pairwise()\n      )\n      .subscribe(this._routeChanged());\n\n    if (this.settings.initialNavigation) {\n      this.router.initialNavigation();\n    }\n  }\n\n  /**\n   * Change language and navigate to translated route\n   */\n  changeLanguage(lang: string, extras?: NavigationExtras, useNavigateMethod?: boolean): void {\n\n    if (lang !== this.parser.currentLang) {\n      const rootSnapshot: ActivatedRouteSnapshot = this.router.routerState.snapshot.root;\n\n      this.parser.translateRoutes(lang).subscribe(() => {\n\n        let url = this.traverseRouteSnapshot(rootSnapshot);\n        url = this.translateRoute(url) as string;\n\n        if (!this.settings.alwaysSetPrefix) {\n          let urlSegments = url.split('/');\n          const languageSegmentIndex = urlSegments.indexOf(this.parser.currentLang);\n          // If the default language has no prefix make sure to remove and add it when necessary\n          if (this.parser.currentLang === this.parser.defaultLang) {\n            // Remove the language prefix from url when current language is the default language\n            if (languageSegmentIndex === 0 || (languageSegmentIndex === 1 && urlSegments[0] === '')) {\n              // Remove the current aka default language prefix from the url\n              urlSegments = urlSegments.slice(0, languageSegmentIndex).concat(urlSegments.slice(languageSegmentIndex + 1));\n            }\n          } else {\n            // When coming from a default language it's possible that the url doesn't contain the language, make sure it does.\n            if (languageSegmentIndex === -1) {\n              // If the url starts with a slash make sure to keep it.\n              const injectionIndex = urlSegments[0] === '' ? 1 : 0;\n              urlSegments = urlSegments.slice(0, injectionIndex).concat(this.parser.currentLang, urlSegments.slice(injectionIndex));\n            }\n          }\n          url = urlSegments.join('/');\n        }\n\n        // Prevent multiple \"/\" character\n        url = url.replace(/\\/+/g, '/');\n\n        const lastSlashIndex = url.lastIndexOf('/');\n        if (lastSlashIndex > 0 && lastSlashIndex === url.length - 1) {\n          url = url.slice(0, -1);\n        }\n\n        const queryParamsObj = this.parser.chooseQueryParams(extras, this.route.snapshot.queryParams);\n\n        this.applyConfigToRouter(this.parser.routes);\n\n        this.lastExtras = extras;\n        if (useNavigateMethod) {\n          const extrasToApply: NavigationExtras = extras ? {...extras} : {};\n          if (queryParamsObj) {\n            extrasToApply.queryParams = queryParamsObj;\n          }\n          this.router.navigate([url], extrasToApply);\n        } else {\n          let queryParams = this.parser.formatQueryParams(queryParamsObj);\n          queryParams = queryParams ? `?${queryParams}` : '';\n          this.router.navigateByUrl(`${url}${queryParams}`, extras);\n        }\n      });\n    }\n  }\n\n  /**\n   * Traverses through the tree to assemble new translated url\n   */\n  private traverseRouteSnapshot(snapshot: ActivatedRouteSnapshot): string {\n    if (snapshot.firstChild && snapshot.routeConfig) {\n      return `${this.parseSegmentValue(snapshot)}/${this.traverseRouteSnapshot(snapshot.firstChild)}`;\n    } else if (snapshot.firstChild) {\n      return this.traverseRouteSnapshot(snapshot.firstChild);\n    } else {\n      return this.parseSegmentValue(snapshot);\n    }\n    /* if (snapshot.firstChild && snapshot.firstChild.routeConfig && snapshot.firstChild.routeConfig.path) {\n      if (snapshot.firstChild.routeConfig.path !== '**') {\n        return this.parseSegmentValue(snapshot) + '/' + this.traverseRouteSnapshot(snapshot.firstChild);\n      } else {\n        return this.parseSegmentValue(snapshot.firstChild);\n      }\n    }\n    return this.parseSegmentValue(snapshot); */\n  }\n\n  /**\n   * Build URL from segments and snapshot (for params)\n   */\n  private buildUrlFromSegments(snapshot: ActivatedRouteSnapshot, segments: string[]): string {\n    return segments.map((s: string, i: number) => s.indexOf(':') === 0 ? snapshot.url[i].path : s).join('/');\n  }\n\n  /**\n   * Extracts new segment value based on routeConfig and url\n   */\n  private parseSegmentValue(snapshot: ActivatedRouteSnapshot): string {\n    if (snapshot.routeConfig && snapshot.routeConfig.matcher) {\n      const subPathMatchedSegments = this.parseSegmentValueMatcher(snapshot);\n      return this.buildUrlFromSegments(snapshot, subPathMatchedSegments);\n    } else if (snapshot.data.localizeRouter) {\n      const path = snapshot.data.localizeRouter.path;\n      const subPathSegments = path.split('/');\n      return this.buildUrlFromSegments(snapshot, subPathSegments);\n    } else if (snapshot.parent && snapshot.parent.parent) { // Not lang route and no localizeRouter data = excluded path\n      const path = snapshot.routeConfig.path;\n      const subPathSegments = path.split('/');\n      return this.buildUrlFromSegments(snapshot, subPathSegments);\n    } else {\n      return '';\n    }\n    /* if (snapshot.routeConfig) {\n      if (snapshot.routeConfig.path === '**') {\n        return snapshot.url.filter((segment: UrlSegment) => segment.path).map((segment: UrlSegment) => segment.path).join('/');\n      } else {\n        const subPathSegments = snapshot.routeConfig.path.split('/');\n        return subPathSegments.map((s: string, i: number) => s.indexOf(':') === 0 ? snapshot.url[i].path : s).join('/');\n      }\n    }\n    return ''; */\n  }\n\n  private parseSegmentValueMatcher(snapshot: ActivatedRouteSnapshot): string[] {\n    const localizeMatcherParams = snapshot.data && snapshot.data.localizeMatcher && snapshot.data.localizeMatcher.params || { };\n    const subPathSegments: string[] = snapshot.url\n      .map((segment: LocalizedMatcherUrlSegment) => {\n        const currentPath = segment.path;\n        const matchedParamName = segment.localizedParamName;\n        const val = (matchedParamName && localizeMatcherParams[matchedParamName]) ?\n          localizeMatcherParams[matchedParamName](currentPath) : null;\n        return val || `${this.parser.getEscapePrefix()}${currentPath}`;\n      });\n    return subPathSegments;\n  }\n\n  /**\n   * Translate route to current language\n   * If new language is explicitly provided then replace language part in url with new language\n   */\n  translateRoute(path: string | any[]): string | any[] {\n    if (typeof path === 'string') {\n      const url = this.parser.translateRoute(path);\n      return !path.indexOf('/') ? this.parser.addPrefixToUrl(url) : url;\n    }\n    // it's an array\n    const result: any[] = [];\n    (path as Array<any>).forEach((segment: any, index: number) => {\n      if (typeof segment === 'string') {\n        const res = this.parser.translateRoute(segment);\n        if (!index && !segment.indexOf('/')) {\n          result.push(this.parser.addPrefixToUrl(res));\n        } else {\n          result.push(res);\n        }\n      } else {\n        result.push(segment);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Event handler to react on route change\n   */\n  private _routeChanged(): (eventPair: [NavigationStart, NavigationStart]) => void {\n    return ([previousEvent, currentEvent]: [NavigationStart, NavigationStart]) => {\n      const previousLang = this.parser.getLocationLang(previousEvent.url) || this.parser.defaultLang;\n      const currentLang = this.parser.getLocationLang(currentEvent.url) || this.parser.defaultLang;\n      const lastExtras = this.lastExtras;\n\n      if (currentLang !== previousLang && this.latestUrl !== currentEvent.url) {\n        this.latestUrl = currentEvent.url;\n        this.cancelCurrentNavigation();\n        this.parser.translateRoutes(currentLang)\n          .subscribe(() => {\n            // Reset routes again once they are all translated\n            this.applyConfigToRouter(this.parser.routes);\n            // Clear global extras\n            this.lastExtras = undefined;\n            // Init new navigation with same url to take new config in consideration\n            this.router.navigateByUrl(currentEvent.url, lastExtras);\n            // Fire route change event\n            this.routerEvents.next(currentLang);\n          });\n      }\n      this.latestUrl = currentEvent.url;\n    };\n  }\n\n  /**\n   * Drop the current Navigation\n   */\n  private cancelCurrentNavigation() {\n    const currentNavigation = this.router.getCurrentNavigation();\n    const url = this.router.serializeUrl(currentNavigation.extractedUrl);\n    (this.router.events as Subject<Event>).next(new NavigationCancel(currentNavigation.id, url, ''));\n    (this.router as any).transitions.next({...(this.router as any).transitions.getValue(), id: 0});\n  }\n\n  /**\n   * Apply config to Angular RouterModule\n   * @param config routes to apply\n   */\n  private applyConfigToRouter(config: Routes) {\n    this.router.resetConfig(deepCopy(config));\n  }\n\n}\n","import { PipeTransform, Pipe, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { LocalizeRouterService } from './localize-router.service';\nimport { Subscription } from 'rxjs';\nimport { equals } from './util';\n\nconst VIEW_DESTROYED_STATE = 128;\n\n@Pipe({\n  name: 'localize',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class LocalizeRouterPipe implements PipeTransform, OnDestroy {\n  private value: string | any[] = '';\n  private lastKey: string | any[];\n  private lastLanguage: string;\n  private subscription: Subscription;\n\n  /**\n   * CTOR\n   */\n  constructor(private localize: LocalizeRouterService, private _ref: ChangeDetectorRef) {\n    this.subscription = this.localize.routerEvents.subscribe(() => {\n      this.transform(this.lastKey);\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Transform current url to localized one\n   */\n  transform(query: string | any[]): string | any[] {\n    if (!query || query.length === 0 || !this.localize.parser.currentLang) {\n      return query;\n    }\n    if (equals(query, this.lastKey) && equals(this.lastLanguage, this.localize.parser.currentLang)) {\n      return this.value;\n    }\n    this.lastKey = query;\n    this.lastLanguage = this.localize.parser.currentLang;\n\n    /** translate key and update values */\n    this.value = this.localize.translateRoute(query);\n    this.lastKey = query;\n    // if view is already destroyed, ignore firing change detection\n    const view = (this._ref as any)._view;\n    if (view && (view.state & VIEW_DESTROYED_STATE)) {\n      return this.value;\n    }\n    setTimeout(() => {\n      this._ref.detectChanges();\n    }, 0)\n\n    return this.value;\n  }\n}\n","import { RouteReuseStrategy, DetachedRouteHandle, ActivatedRouteSnapshot } from '@angular/router';\n\nexport class GilsdavReuseStrategy implements RouteReuseStrategy {\n  // private handlers: {[key: string]: DetachedRouteHandle} = {};\n  constructor() {\n  }\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldDetach', route);\n    return false;\n  }\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    // console.log('store', route, handle);\n    // console.log('store url', this.getKey(route));\n    // this.handlers[this.getKey(route)] = handle;\n  }\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldAttach', route, this.getKey(route));\n    // return !!this.handlers[this.getKey(route)];\n    return false;\n  }\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    // console.log('retrieve', route);\n    // console.log('retrieve url', this.getKey(route));\n    // const result = this.handlers[this.getKey(route)];\n    // delete this.handlers[this.getKey(route)];\n    // return result;\n    return null;\n  }\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldReuseRoute', future, curr, this.getKey(future) === this.getKey(curr));\n    // console.log('shouldReuseRoute', future && curr ? this.getKey(future) === this.getKey(curr) : false);\n    return future && curr ? this.getKey(future) === this.getKey(curr) : false;\n  }\n  private getKey(route: ActivatedRouteSnapshot) {\n    // console.log(route.parent.component.toString());\n    if (route.firstChild && route.firstChild.routeConfig && route.firstChild.routeConfig.path &&\n        route.firstChild.routeConfig.path.indexOf('**') !== -1) { // WildCard\n      return 'WILDCARD';\n    } else if (!route.data.localizeRouter && (!route.parent || !route.parent.parent) && !route.data.skipRouteLocalization) { // Lang route\n      return 'LANG';\n    } else if (route.routeConfig.matcher) {\n      let keyM = `${this.getKey(route.parent)}/${route.routeConfig.matcher.name}`;\n      if (route.data.discriminantPathKey) {\n        keyM = `${keyM}-${route.data.discriminantPathKey}`;\n      }\n      return keyM;\n    } else if (route.data.localizeRouter) {\n      let key = `${this.getKey(route.parent)}/${route.data.localizeRouter.path}`;\n      if (route.data.discriminantPathKey) {\n        key = `${key}-${route.data.discriminantPathKey}`;\n      }\n      return key;\n    } else {\n      let key = route.routeConfig.path;\n      if (route.parent) {\n        key = `${this.getKey(route.parent)}/${route.routeConfig.path}`;\n      }\n      if (route.data.discriminantPathKey) {\n        key = `${key}-${route.data.discriminantPathKey}`;\n      }\n      return key;\n    }\n  }\n}\n","import {\n  Router, UrlSerializer, ChildrenOutletContexts, Routes,\n  Route, ExtraOptions, UrlHandlingStrategy, RouteReuseStrategy, RouterEvent, LoadChildren, ROUTES\n} from '@angular/router';\nimport { Type, Injector, Compiler, ApplicationRef, NgModuleFactory, PLATFORM_ID } from '@angular/core';\nimport { Location, isPlatformBrowser } from '@angular/common';\nimport { from, of, isObservable, Observable } from 'rxjs';\nimport { mergeMap, map } from 'rxjs/operators';\nimport { flatten, isPromise } from './util';\nimport { LocalizeParser } from './localize-router.parser';\n\nexport class LocalizedRouter extends Router {\n  constructor(\n    _rootComponentType: Type<any>|null,\n    _urlSerializer: UrlSerializer,\n    _rootContexts: ChildrenOutletContexts,\n    _location: Location, injector: Injector,\n    compiler: Compiler,\n    public config: Routes,\n    localize: LocalizeParser\n    ) {\n    super(_rootComponentType, _urlSerializer, _rootContexts, _location, injector, compiler, config);\n    // Custom configuration\n    const platformId = injector.get(PLATFORM_ID);\n    const isBrowser = isPlatformBrowser(platformId);\n    // __proto__ is needed for preloaded modules be doesn't work with SSR\n    // @ts-ignore\n    const configLoader = (isBrowser ? this.configLoader.__proto__ : this.configLoader);\n\n    configLoader.loadModuleFactoryOrRoutes = (loadChildren: LoadChildren) => {\n      return wrapIntoObservable(loadChildren()).pipe(mergeMap((t: any) => {\n        let compiled: Observable<NgModuleFactory<any> | Array<any>>;\n        if (t instanceof NgModuleFactory || Array.isArray(t)) {\n          compiled = of(t);\n        } else {\n          compiled = from(compiler.compileModuleAsync(t)) as Observable<NgModuleFactory<any>>;\n        }\n        return compiled.pipe(map(factory => {\n          if (Array.isArray(factory)) {\n            return factory;\n          }\n          return {\n            moduleType: factory.moduleType,\n            create: (parentInjector: Injector) => {\n              const module = factory.create(parentInjector);\n              const getMethod = module.injector.get.bind(module.injector);\n\n              module.injector['get'] = (token: any, notFoundValue: any) => {\n                const getResult = getMethod(token, notFoundValue);\n\n                if (token === ROUTES) {\n                  // translate lazy routes\n                  return localize.initChildRoutes([].concat(...getResult));\n                } else {\n                  return getResult;\n                }\n              };\n              return module;\n            }\n          };\n        }));\n      }));\n    };\n    // (this as any).navigations = (this as any).setupNavigations((this as any).transitions);\n  }\n\n}\nexport function setupRouter(\n    ref: ApplicationRef, urlSerializer: UrlSerializer, contexts: ChildrenOutletContexts,\n    location: Location, injector: Injector, compiler: Compiler,\n    config: Route[][], localize: LocalizeParser, opts: ExtraOptions = {}, urlHandlingStrategy?: UrlHandlingStrategy,\n    routeReuseStrategy?: RouteReuseStrategy) {\n  const router = new LocalizedRouter(\n      null, urlSerializer, contexts, location, injector, compiler, flatten(config), localize);\n\n  if (urlHandlingStrategy) {\n    router.urlHandlingStrategy = urlHandlingStrategy;\n  }\n\n  if (routeReuseStrategy) {\n    router.routeReuseStrategy = routeReuseStrategy;\n  }\n\n  if (opts.errorHandler) {\n    router.errorHandler = opts.errorHandler;\n  }\n\n  if (opts.malformedUriErrorHandler) {\n    router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n  }\n\n  if (opts.enableTracing) {\n    router.events.subscribe((e: RouterEvent) => {\n      console.group(`Router Event: ${(<any>e.constructor).name}`);\n      console.log(e.toString());\n      console.log(e);\n      console.groupEnd();\n    });\n  }\n\n  if (opts.onSameUrlNavigation) {\n    router.onSameUrlNavigation = opts.onSameUrlNavigation;\n  }\n\n  if (opts.paramsInheritanceStrategy) {\n    router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n  }\n\n  if (opts.urlUpdateStrategy) {\n    router.urlUpdateStrategy = opts.urlUpdateStrategy;\n  }\n\n  if (opts.relativeLinkResolution) {\n    router.relativeLinkResolution = opts.relativeLinkResolution;\n  }\n\n  return router;\n}\n\nexport function wrapIntoObservable<T>(value: T | NgModuleFactory<T>| Promise<T>| Observable<T>) {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n\n  return of (value);\n}\n","import {\n  NgModule, ModuleWithProviders, APP_INITIALIZER, Optional, SkipSelf,\n  Injectable, Injector, ApplicationRef, Compiler\n} from '@angular/core';\nimport { LocalizeRouterService } from './localize-router.service';\nimport { DummyLocalizeParser, LocalizeParser } from './localize-router.parser';\nimport { RouterModule, Routes, RouteReuseStrategy, Router, UrlSerializer, ChildrenOutletContexts,\n  ROUTES, ROUTER_CONFIGURATION, UrlHandlingStrategy } from '@angular/router';\nimport { LocalizeRouterPipe } from './localize-router.pipe';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule, Location } from '@angular/common';\nimport {\n  ALWAYS_SET_PREFIX,\n  CACHE_MECHANISM, CACHE_NAME, DEFAULT_LANG_FUNCTION, LOCALIZE_ROUTER_FORROOT_GUARD,\n  LocalizeRouterConfig, LocalizeRouterSettings,\n  RAW_ROUTES,\n  USE_CACHED_LANG,\n  COOKIE_FORMAT,\n  INITIAL_NAVIGATION\n} from './localize-router.config';\nimport { GilsdavReuseStrategy } from './gilsdav-reuse-strategy';\nimport { setupRouter } from './localized-router';\nimport { deepCopy } from './util';\n\n@Injectable()\nexport class ParserInitializer {\n  parser: LocalizeParser;\n  routes: Routes;\n\n  /**\n   * CTOR\n   */\n  constructor(private injector: Injector) {\n  }\n\n  appInitializer(): Promise<any> {\n    const res = this.parser.load(this.routes);\n\n    return res.then(() => {\n      const localize = this.injector.get(LocalizeRouterService);\n      const router = this.injector.get(Router);\n      const settings = this.injector.get(LocalizeRouterSettings);\n      localize.init();\n\n      if (settings.initialNavigation) {\n        return new Promise<void>(resolve => {\n          // @ts-ignore\n          const oldAfterPreactivation = router.afterPreactivation;\n          let firstInit = true;\n          // @ts-ignore\n          router.afterPreactivation = () => {\n            if (firstInit) {\n              resolve();\n              firstInit = false;\n              localize.hooks._initializedSubject.next(true);\n              localize.hooks._initializedSubject.complete();\n            }\n            return oldAfterPreactivation();\n          };\n        });\n      } else {\n        localize.hooks._initializedSubject.next(true);\n        localize.hooks._initializedSubject.complete();\n      }\n    });\n  }\n\n  generateInitializer(parser: LocalizeParser, routes: Routes[]): () => Promise<any> {\n    this.parser = parser;\n    this.routes = routes.reduce((a, b) => a.concat(b));\n    return this.appInitializer;\n  }\n}\n\nexport function getAppInitializer(p: ParserInitializer, parser: LocalizeParser, routes: Routes[]): any {\n  // DeepCopy needed to prevent RAW_ROUTES mutation\n  const routesCopy = deepCopy(routes);\n  return p.generateInitializer(parser, routesCopy).bind(p);\n}\n\n@NgModule({\n  imports: [CommonModule, RouterModule, TranslateModule],\n  declarations: [LocalizeRouterPipe],\n  exports: [LocalizeRouterPipe]\n})\nexport class LocalizeRouterModule {\n\n  static forRoot(routes: Routes, config: LocalizeRouterConfig = {}): ModuleWithProviders<LocalizeRouterModule> {\n    return {\n      ngModule: LocalizeRouterModule,\n      providers: [\n        {\n          provide: Router,\n          useFactory: setupRouter,\n          deps: [\n            ApplicationRef,\n            UrlSerializer,\n            ChildrenOutletContexts,\n            Location,\n            Injector,\n            Compiler,\n            ROUTES,\n            LocalizeParser,\n            ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()],\n            [RouteReuseStrategy, new Optional()]\n          ]\n        },\n        {\n          provide: LOCALIZE_ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[LocalizeRouterModule, new Optional(), new SkipSelf()]]\n        },\n        { provide: USE_CACHED_LANG, useValue: config.useCachedLang },\n        { provide: ALWAYS_SET_PREFIX, useValue: config.alwaysSetPrefix },\n        { provide: CACHE_NAME, useValue: config.cacheName },\n        { provide: CACHE_MECHANISM, useValue: config.cacheMechanism },\n        { provide: DEFAULT_LANG_FUNCTION, useValue: config.defaultLangFunction },\n        { provide: COOKIE_FORMAT, useValue: config.cookieFormat },\n        { provide: INITIAL_NAVIGATION, useValue: config.initialNavigation },\n        LocalizeRouterSettings,\n        config.parser || { provide: LocalizeParser, useClass: DummyLocalizeParser },\n        {\n          provide: RAW_ROUTES,\n          multi: true,\n          useValue: routes\n        },\n        LocalizeRouterService,\n        ParserInitializer,\n        {\n          provide: APP_INITIALIZER,\n          multi: true,\n          useFactory: getAppInitializer,\n          deps: [ParserInitializer, LocalizeParser, RAW_ROUTES]\n        },\n        {\n          provide: RouteReuseStrategy,\n          useClass: GilsdavReuseStrategy\n        }\n      ]\n    };\n  }\n\n  static forChild(routes: Routes): ModuleWithProviders<LocalizeRouterModule> {\n    return {\n      ngModule: LocalizeRouterModule,\n      providers: [\n        {\n          provide: RAW_ROUTES,\n          multi: true,\n          useValue: routes\n        }\n      ]\n    };\n  }\n}\n\nexport function provideForRootGuard(localizeRouterModule: LocalizeRouterModule): string {\n  if (localizeRouterModule) {\n    throw new Error(\n      `LocalizeRouterModule.forRoot() called twice. Lazy loaded modules should use LocalizeRouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n","import { ROUTES } from '@angular/router';\nimport {\n  NgModuleFactory, Injector, Compiler, Type, NgModuleRef\n} from '@angular/core';\nimport { LocalizeParser } from './localize-router.parser';\n\nexport class LocalizeNgModuleFactory extends NgModuleFactory<any> {\n  constructor(public moduleType: Type<any>) {\n    super();\n  }\n  create = (parentInjector: Injector) => {\n    const compiler = parentInjector.get(Compiler);\n    const localize = parentInjector.get(LocalizeParser);\n    const compiled = compiler.compileModuleAndAllComponentsSync(this.moduleType);\n    const moduleRef: NgModuleRef<any> = compiled.ngModuleFactory.create(parentInjector);\n    const getMethod = moduleRef.injector.get.bind(moduleRef.injector);\n    moduleRef.injector['get'] = (token: any, notFoundValue: any) => {\n      const getResult = getMethod(token, notFoundValue);\n\n      if (token === ROUTES) {\n        // translate lazy routes\n        return localize.initChildRoutes([].concat(...getResult));\n      } else {\n        return getResult;\n      }\n    };\n\n    return moduleRef;\n  }\n}\n\nexport function translateModule(moduleType: Type<any>) {\n  return new LocalizeNgModuleFactory(moduleType);\n}\n","\n/*\n * Public API Surface of ngx-translate-router\n */\n\nexport * from './lib/localize-router.module';\nexport * from './lib/localize-router.parser';\nexport * from './lib/localize-router.service';\nexport * from './lib/localize-router.pipe';\nexport * from './lib/localize-router.config';\nexport * from './lib/localize-router-config-loader';\nexport * from './lib/gilsdav-reuse-strategy';\nexport * from './lib/localized-router';\nexport * from './lib/localized-matcher-url-segment';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.LocalizeRouterService"],"mappings":"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"}